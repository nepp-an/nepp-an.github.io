<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>linux on nepp&#39;s blog</title>
    <link>https://nepp-an.github.io/tags/linux/</link>
    <description>Recent content in linux on nepp&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Sun, 11 Jul 2021 21:12:44 +0800</lastBuildDate>
    
	<atom:link href="https://nepp-an.github.io/tags/linux/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>epoll</title>
      <link>https://nepp-an.github.io/post/epoll/</link>
      <pubDate>Sun, 11 Jul 2021 21:12:44 +0800</pubDate>
      
      <guid>https://nepp-an.github.io/post/epoll/</guid>
      <description>epoll epoll是一种I/O事件通知机制，是linux内核实现IO多路复用的一种方式。select和poll属于轮询机制。 假设有大量的请求和一个进程保持着TCP连接，但是其中只有一小部分是活跃的，这需要监听这些连接，在需要的时候返回，从而对其进行读写操作。 https://www.jianshu.com/p/31cdfd6f5a48</description>
    </item>
    
    <item>
      <title>runtime</title>
      <link>https://nepp-an.github.io/post/runtime/</link>
      <pubDate>Sun, 11 Jul 2021 21:12:44 +0800</pubDate>
      
      <guid>https://nepp-an.github.io/post/runtime/</guid>
      <description>goroutine M:N模型 go创建M个线程，之后创建个N个goroutine会依附在M个线程上执行。 pstree 命令看进程下几个线程 同一时刻，一个线程只能跑一个goroutine，当goroutine发生阻塞（chan阻塞，mutex，syscall陷入内核）时，go的runtime会进行调度，让其他g</description>
    </item>
    
    <item>
      <title>虚拟内存</title>
      <link>https://nepp-an.github.io/post/%E8%99%9A%E6%8B%9F%E5%86%85%E5%AD%98/</link>
      <pubDate>Thu, 08 Jul 2021 21:12:44 +0800</pubDate>
      
      <guid>https://nepp-an.github.io/post/%E8%99%9A%E6%8B%9F%E5%86%85%E5%AD%98/</guid>
      <description>mmap： 在进程的虚拟内存地址空间中分配地址，创建和物理内存之间的映射关系。mmap在虚拟内存中分配空间，只有在第一次使用虚拟内存的时候才分配物理内存。 mmap的write： 1. 用户态将需要写入的数据直接拷贝到mmap的地址 2. 若mmap地址未对应物理地址，缺页异常，由内核处理 3. 若对</description>
    </item>
    
    <item>
      <title>Haystack 图片存储系统</title>
      <link>https://nepp-an.github.io/post/haystack/</link>
      <pubDate>Fri, 30 Oct 2020 14:12:44 +0800</pubDate>
      
      <guid>https://nepp-an.github.io/post/haystack/</guid>
      <description>主要核心是减少硬盘操作 After reducing directory sizes to hundreds of images per directory, the resulting system would still generally incur 3 disk operations to fetch an image: one to read the directory metadata into memory, a second to load the inode into memory, and a third to read the file contents.</description>
    </item>
    
  </channel>
</rss>